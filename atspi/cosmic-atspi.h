/* Generated by wayland-scanner 1.23.0 */

#ifndef COSMIC_ATSPI_V1_CLIENT_PROTOCOL_H
#define COSMIC_ATSPI_V1_CLIENT_PROTOCOL_H

#include <stdint.h>
#include <stddef.h>
#include "wayland-client.h"

#ifdef  __cplusplus
extern "C" {
#endif

/**
 * @page page_cosmic_atspi_v1 The cosmic_atspi_v1 protocol
 * 
 *
 * @section page_desc_cosmic_atspi_v1 Description
 *
 *
 * @section page_ifaces_cosmic_atspi_v1 Interfaces
 * - @subpage page_iface_cosmic_atspi_manager_v1 - 
 * @section page_copyright_cosmic_atspi_v1 Copyright
 * <pre>
 *
 * foo bar
 * </pre>
 */
struct cosmic_atspi_manager_v1;

#ifndef COSMIC_ATSPI_MANAGER_V1_INTERFACE
#define COSMIC_ATSPI_MANAGER_V1_INTERFACE
/**
 * @page page_iface_cosmic_atspi_manager_v1 cosmic_atspi_manager_v1
 * @section page_iface_cosmic_atspi_manager_v1_desc Description
 *
 * @section page_iface_cosmic_atspi_manager_v1_api API
 * See @ref iface_cosmic_atspi_manager_v1.
 */
/**
 * @defgroup iface_cosmic_atspi_manager_v1 The cosmic_atspi_manager_v1 interface
 *
 */
extern const struct wl_interface cosmic_atspi_manager_v1_interface;
#endif

/**
 * @ingroup iface_cosmic_atspi_manager_v1
 * @struct cosmic_atspi_manager_v1_listener
 */
struct cosmic_atspi_manager_v1_listener {
	/**
	 * 
	 *
	 * 
	 * @param fd eis file descriptor
	 */
	void (*key_events_eis)(void *data,
			       struct cosmic_atspi_manager_v1 *cosmic_atspi_manager_v1,
			       int32_t fd);
};

/**
 * @ingroup iface_cosmic_atspi_manager_v1
 */
static inline int
cosmic_atspi_manager_v1_add_listener(struct cosmic_atspi_manager_v1 *cosmic_atspi_manager_v1,
				     const struct cosmic_atspi_manager_v1_listener *listener, void *data)
{
	return wl_proxy_add_listener((struct wl_proxy *) cosmic_atspi_manager_v1,
				     (void (**)(void)) listener, data);
}

#define COSMIC_ATSPI_MANAGER_V1_DESTROY 0
#define COSMIC_ATSPI_MANAGER_V1_ADD_KEY_GRAB 1
#define COSMIC_ATSPI_MANAGER_V1_REMOVE_KEY_GRAB 2
#define COSMIC_ATSPI_MANAGER_V1_GRAB_KEYBOARD 3
#define COSMIC_ATSPI_MANAGER_V1_UNGRAB_KEYBOARD 4

/**
 * @ingroup iface_cosmic_atspi_manager_v1
 */
#define COSMIC_ATSPI_MANAGER_V1_KEY_EVENTS_EIS_SINCE_VERSION 1

/**
 * @ingroup iface_cosmic_atspi_manager_v1
 */
#define COSMIC_ATSPI_MANAGER_V1_DESTROY_SINCE_VERSION 1
/**
 * @ingroup iface_cosmic_atspi_manager_v1
 */
#define COSMIC_ATSPI_MANAGER_V1_ADD_KEY_GRAB_SINCE_VERSION 1
/**
 * @ingroup iface_cosmic_atspi_manager_v1
 */
#define COSMIC_ATSPI_MANAGER_V1_REMOVE_KEY_GRAB_SINCE_VERSION 1
/**
 * @ingroup iface_cosmic_atspi_manager_v1
 */
#define COSMIC_ATSPI_MANAGER_V1_GRAB_KEYBOARD_SINCE_VERSION 1
/**
 * @ingroup iface_cosmic_atspi_manager_v1
 */
#define COSMIC_ATSPI_MANAGER_V1_UNGRAB_KEYBOARD_SINCE_VERSION 1

/** @ingroup iface_cosmic_atspi_manager_v1 */
static inline void
cosmic_atspi_manager_v1_set_user_data(struct cosmic_atspi_manager_v1 *cosmic_atspi_manager_v1, void *user_data)
{
	wl_proxy_set_user_data((struct wl_proxy *) cosmic_atspi_manager_v1, user_data);
}

/** @ingroup iface_cosmic_atspi_manager_v1 */
static inline void *
cosmic_atspi_manager_v1_get_user_data(struct cosmic_atspi_manager_v1 *cosmic_atspi_manager_v1)
{
	return wl_proxy_get_user_data((struct wl_proxy *) cosmic_atspi_manager_v1);
}

static inline uint32_t
cosmic_atspi_manager_v1_get_version(struct cosmic_atspi_manager_v1 *cosmic_atspi_manager_v1)
{
	return wl_proxy_get_version((struct wl_proxy *) cosmic_atspi_manager_v1);
}

/**
 * @ingroup iface_cosmic_atspi_manager_v1
 *
 */
static inline void
cosmic_atspi_manager_v1_destroy(struct cosmic_atspi_manager_v1 *cosmic_atspi_manager_v1)
{
	wl_proxy_marshal_flags((struct wl_proxy *) cosmic_atspi_manager_v1,
			 COSMIC_ATSPI_MANAGER_V1_DESTROY, NULL, wl_proxy_get_version((struct wl_proxy *) cosmic_atspi_manager_v1), WL_MARSHAL_FLAG_DESTROY);
}

/**
 * @ingroup iface_cosmic_atspi_manager_v1
 *
 */
static inline void
cosmic_atspi_manager_v1_add_key_grab(struct cosmic_atspi_manager_v1 *cosmic_atspi_manager_v1, uint32_t mods, struct wl_array *virtual_mods, uint32_t key)
{
	wl_proxy_marshal_flags((struct wl_proxy *) cosmic_atspi_manager_v1,
			 COSMIC_ATSPI_MANAGER_V1_ADD_KEY_GRAB, NULL, wl_proxy_get_version((struct wl_proxy *) cosmic_atspi_manager_v1), 0, mods, virtual_mods, key);
}

/**
 * @ingroup iface_cosmic_atspi_manager_v1
 *
 */
static inline void
cosmic_atspi_manager_v1_remove_key_grab(struct cosmic_atspi_manager_v1 *cosmic_atspi_manager_v1, uint32_t mods, struct wl_array *virtual_mods, uint32_t key)
{
	wl_proxy_marshal_flags((struct wl_proxy *) cosmic_atspi_manager_v1,
			 COSMIC_ATSPI_MANAGER_V1_REMOVE_KEY_GRAB, NULL, wl_proxy_get_version((struct wl_proxy *) cosmic_atspi_manager_v1), 0, mods, virtual_mods, key);
}

/**
 * @ingroup iface_cosmic_atspi_manager_v1
 *
 */
static inline void
cosmic_atspi_manager_v1_grab_keyboard(struct cosmic_atspi_manager_v1 *cosmic_atspi_manager_v1)
{
	wl_proxy_marshal_flags((struct wl_proxy *) cosmic_atspi_manager_v1,
			 COSMIC_ATSPI_MANAGER_V1_GRAB_KEYBOARD, NULL, wl_proxy_get_version((struct wl_proxy *) cosmic_atspi_manager_v1), 0);
}

/**
 * @ingroup iface_cosmic_atspi_manager_v1
 *
 */
static inline void
cosmic_atspi_manager_v1_ungrab_keyboard(struct cosmic_atspi_manager_v1 *cosmic_atspi_manager_v1)
{
	wl_proxy_marshal_flags((struct wl_proxy *) cosmic_atspi_manager_v1,
			 COSMIC_ATSPI_MANAGER_V1_UNGRAB_KEYBOARD, NULL, wl_proxy_get_version((struct wl_proxy *) cosmic_atspi_manager_v1), 0);
}

#ifdef  __cplusplus
}
#endif

#endif
